#!/usr/bin/env node
/**
 * Generate summary.md from report.json
 */

const fs = require('fs');

const REPORT_FILE = 'report.json';
const SUMMARY_FILE = 'summary.md';

function generateSummary() {
  if (!fs.existsSync(REPORT_FILE)) {
    console.error('❌ report.json not found. Run analyze-results.js first.');
    process.exit(1);
  }

  const report = JSON.parse(fs.readFileSync(REPORT_FILE, 'utf8'));

  const md = `# 🧪 Zantara E2E Test Report

**Generated**: ${new Date().toISOString()}
**Status**: ${report.summary.status}
**Pass Rate**: ${report.summary.pass_rate}

---

## 📊 Summary

- **Total Tests**: ${report.summary.total_tests}
- **Passed**: ✅ ${report.summary.passed}
- **Failed**: ❌ ${report.summary.failed}
- **Skipped**: ⏭️ ${report.summary.skipped}

---

## 🔍 Test Results

${report.tests.map((t, i) => {
  const icon = t.status === 'passed' ? '✅' : t.status === 'failed' ? '❌' : '⏭️';
  return `${i + 1}. ${icon} **${t.name}** (${(t.duration_ms / 1000).toFixed(1)}s)${
    t.errors.length > 0 ? `\n   - Error: ${t.errors[0].message || t.errors[0]}` : ''
  }`;
}).join('\n')}

---

## 📡 SSE Metrics

- **Connection Success Rate**: ${(report.sse_metrics.connection_success_rate * 100).toFixed(1)}%
- **Avg Latency**: ${report.sse_metrics.avg_latency_ms}ms
- **P95 Latency**: ${report.sse_metrics.p95_latency_ms}ms
- **Throughput**: ${report.sse_metrics.throughput_msgs_per_sec} msgs/sec
- **Error Rate**: ${(report.sse_metrics.error_rate * 100).toFixed(2)}%
- **Reconnect Attempts**: ${report.sse_metrics.reconnect_attempts}

---

## ⚡ Performance Metrics

- **TTFB (avg)**: ${report.perf_metrics.TTFB_ms_avg}ms
- **Roundtrip (avg)**: ${report.perf_metrics.roundtrip_ms_avg}ms
- **CPU Peak**: ${report.perf_metrics.cpu_peak}
- **Memory Peak**: ${report.perf_metrics.memory_peak}

---

## 💰 Cost Estimate

- **API Calls**: ${report.cost_estimate.api_calls}
- **Tokens**: ${report.cost_estimate.tokens_estimated_or_placeholder}
- **Data Transferred**: ${report.cost_estimate.data_MB} MB

**Formula**: ${report.cost_estimate.formula_used}

**Estimated Cost**: ${report.cost_estimate.estimated_cost_if_prices_provided}

---

## 💡 Top Recommendations

### High Impact (Immediate Action)
${report.recommendations.high_impact.map((rec, i) => `${i + 1}. ${rec}`).join('\n')}

### Medium Term
${report.recommendations.medium_term.map((rec, i) => `${i + 1}. ${rec}`).join('\n')}

---

## 📦 Artifacts

- **Screenshots**: ${report.artifacts.screenshots.length}
- **Videos**: ${report.artifacts.videos.length}
- **Traces**: ${report.artifacts.traces.length}
- **HAR Files**: ${report.artifacts.har_files.length}

[View HTML Report](${report.artifacts.playwright_html_report})

---

## ✅ Critical Tests Status

${['T01', 'T02', 'T05'].map(testId => {
  const test = report.tests.find(t => t.name.includes(testId));
  if (!test) return `- **${testId}**: Not found`;
  const icon = test.status === 'passed' ? '✅' : '❌';
  return `- **${testId}** (${test.name.split(':')[1].trim()}): ${icon} ${test.status.toUpperCase()}`;
}).join('\n')}

---

**🤖 Generated by Zantara AutoFix E2E Test Suite**
`;

  fs.writeFileSync(SUMMARY_FILE, md);
  console.log(`✅ Summary generated: ${SUMMARY_FILE}`);
}

if (require.main === module) {
  generateSummary();
}

module.exports = { generateSummary };
