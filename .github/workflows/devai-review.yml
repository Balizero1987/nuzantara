name: DevAI Code Review

on:
  workflow_dispatch:

jobs:
  devai-review:
    name: DevAI Automated Code Review
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            src/**/*.ts
            src/**/*.js
            apps/**/*.ts
            apps/**/*.py

      - name: DevAI Code Analysis
        if: steps.changed-files.outputs.any_changed == 'true'
        id: devai-analysis
        run: |
          echo "ðŸ¤– DevAI analyzing changed files..."
          
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
          
          # Build analysis payload
          FILES_CONTENT=""
          for file in $CHANGED_FILES; do
            if [ -f "$file" ]; then
              FILES_CONTENT+="### $file\n"
              FILES_CONTENT+="$(cat $file | head -100)\n\n"
            fi
          done
          
          # Call DevAI API
          RESPONSE=$(curl -s -X POST "${{ secrets.NUZANTARA_API_URL }}/call" \
            -H "x-api-key: ${{ secrets.NUZANTARA_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "key": "devai.review",
              "params": {
                "code": "'"$FILES_CONTENT"'",
                "context": "Pull Request Review"
              }
            }')
          
          echo "devai_response=$RESPONSE" >> $GITHUB_OUTPUT
          
          # Extract answer
          ANSWER=$(echo $RESPONSE | jq -r '.data.answer // "Analysis not available"')
          echo "devai_analysis<<EOF" >> $GITHUB_OUTPUT
          echo "$ANSWER" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment PR with DevAI Review
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const analysis = `${{ steps.devai-analysis.outputs.devai_analysis }}`;
            
            const comment = `## ðŸ¤– DevAI Code Review
            
**Model**: Qwen 2.5 Coder 7B (zeroai87/devai-qwen-2.5-coder-7b)  
**Files Analyzed**: ${{ steps.changed-files.outputs.all_changed_files_count }}

### Analysis

${analysis}

---

*Automated review by DevAI - NUZANTARA Internal Developer AI*  
*To re-run: Comment \`/devai review\` on this PR*`;
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });

      - name: Check for Critical Issues
        if: steps.devai-analysis.outputs.devai_analysis contains 'CRITICAL' || steps.devai-analysis.outputs.devai_analysis contains 'ERROR'
        run: |
          echo "::warning::DevAI found critical issues in the code"
          # Don't fail the build, just warning

  devai-stats:
    name: DevAI Statistics
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Report DevAI Usage
        run: |
          echo "ðŸ“Š DevAI is analyzing your code..."
          echo "âœ… Automatic bug detection enabled"
          echo "âœ… Code quality checks enabled"
          echo "âœ… Performance analysis enabled"

