name: Unified Scraper Tests

on:
  push:
    branches: [ main, develop, claude/* ]
    paths:
      - 'apps/backend-rag/backend/nuzantara_scraper/**'
      - 'apps/backend-rag/backend/tests/**'
      - '.github/workflows/test-scraper.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/backend-rag/backend/nuzantara_scraper/**'
      - 'apps/backend-rag/backend/tests/**'

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          cd apps/backend-rag/backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements_test.txt

      - name: Run unit tests
        run: |
          cd apps/backend-rag/backend
          pytest tests/unit -v --cov=nuzantara_scraper --cov-report=xml --cov-report=term-missing

      - name: Run integration tests
        run: |
          cd apps/backend-rag/backend
          pytest tests/integration -v --cov=nuzantara_scraper --cov-append --cov-report=xml

      - name: Run E2E tests
        run: |
          cd apps/backend-rag/backend
          pytest tests/e2e -v --cov=nuzantara_scraper --cov-append --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./apps/backend-rag/backend/coverage.xml
          flags: unittests
          name: python-${{ matrix.python-version }}
          fail_ci_if_error: false

      - name: Check coverage threshold
        run: |
          cd apps/backend-rag/backend
          coverage report --fail-under=80

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy

      - name: Check code formatting with Black
        run: |
          cd apps/backend-rag/backend
          black --check nuzantara_scraper tests

      - name: Check import sorting with isort
        run: |
          cd apps/backend-rag/backend
          isort --check-only nuzantara_scraper tests

      - name: Lint with flake8
        run: |
          cd apps/backend-rag/backend
          flake8 nuzantara_scraper tests --max-line-length=100 --extend-ignore=E203,W503

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit

      - name: Check dependencies for vulnerabilities
        run: |
          cd apps/backend-rag/backend
          safety check --json || true

      - name: Security scan with Bandit
        run: |
          cd apps/backend-rag/backend
          bandit -r nuzantara_scraper -ll || true
