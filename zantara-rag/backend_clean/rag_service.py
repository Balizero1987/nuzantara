import chromadb
from anthropic import Anthropic
from config import settings
from typing import List, Tuple
import logging

logger = logging.getLogger(__name__)

class RAGService:
    def __init__(self):
        # ChromaDB (optional - graceful degradation if not available)
        self.collection = None
        try:
            logger.info(f"Connecting to ChromaDB at: {settings.chroma_db_path}")
            self.chroma_client = chromadb.PersistentClient(path=settings.chroma_db_path)
            # Try to get collection, create if doesn't exist
            try:
                self.collection = self.chroma_client.get_collection(settings.collection_name)
                logger.info(f"‚úÖ ChromaDB connected. Collection: {settings.collection_name}, Count: {self.collection.count()}")
            except:
                logger.warning(f"‚ö†Ô∏è  Collection '{settings.collection_name}' not found. RAG disabled, using pure LLM mode.")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è  ChromaDB not available: {e}. Using pure LLM mode.")

        # Anthropic
        self.client = Anthropic(api_key=settings.anthropic_api_key)
        logger.info("‚úÖ Anthropic client initialized")

    def retrieve_context(self, query: str, n_results: int = 5) -> Tuple[str, List[dict]]:
        """Retrieve relevant chunks from ChromaDB"""
        if not self.collection:
            logger.warning("ChromaDB not available, returning empty context")
            return "", []

        try:
            results = self.collection.query(
                query_texts=[query],
                n_results=n_results
            )

            if not results['documents'] or not results['documents'][0]:
                logger.warning("No documents found in ChromaDB")
                return "", []

            # Combine chunks
            context = "\n\n".join(results['documents'][0])

            # Sources
            sources = [
                {
                    "text": doc[:200] + "..." if len(doc) > 200 else doc,
                    "metadata": meta
                }
                for doc, meta in zip(results['documents'][0], results['metadatas'][0])
            ]

            logger.info(f"Retrieved {len(sources)} chunks from ChromaDB")
            return context, sources
        except Exception as e:
            logger.error(f"Error retrieving context: {e}")
            return "", []

    def generate_response(
        self,
        query: str,
        conversation_history: List[dict],
        use_rag: bool = True,
        model: str = "haiku"
    ) -> Tuple[str, List[dict]]:
        """Generate response using RAG + LLM"""

        sources = []

        # Retrieve context if RAG enabled
        if use_rag:
            context, sources = self.retrieve_context(query)
            system_prompt = f"""Sei NuZantara, collega AI del team Bali Zero.

CHI SEI:
Sei parte del team come consulente intelligente che supporta imprenditori, digital nomads e investitori nel loro percorso business in Indonesia. Non sei un chatbot distaccato - sei una collega che lavora insieme agli altri per risolvere problemi reali.

LA TUA PERSONALIT√Ä:
- Calorosa e genuina, come una collega che si prende cura del successo altrui
- Diretta quando serve, senza giri di parole inutili
- Code-switching naturale IT/EN/ID basato sulla lingua della persona
- Umile: ammetti quando non sai qualcosa invece di inventare
- Pratica: vai dritto al punto, poi approfondisci se richiesto

COME COMUNICHI:
- Tono collaborativo: "vediamo insieme" non "ti spiego io"
- Risposte strutturate ma conversazionali, non fredde o burocratiche
- Fai domande di chiarimento quando la richiesta √® vaga
- Celebra i piccoli progressi ("ottimo, sei a met√† del processo!")
- Usa emoji üå∏ con moderazione per calore umano, ma non esagerare

LE TUE COMPETENZE:
- Setup PT/PMA, PT Perorangan, Representative Office
- Visa: KITAS, investor visa, social visa, business visa, ITAS
- Normative: KBLI codes, OSS (Online Single Submission), NIB
- Legale: Akta Pendirian, domicilio, licensing, compliance
- Tax: NPWP, PPh, PPN, withholding tax per foreigners
- Accounting base e pratiche amministrative Indonesia

ESEMPI DI CONVERSAZIONI:

Example 1 - Query Vaga:
User: "Ho bisogno di aiuto per aprire un'azienda"
NuZantara: "Certo! Per aiutarti al meglio, fammi capire meglio la tua situazione:
- Sei cittadino indonesiano o straniero?
- Che tipo di business hai in mente? (es. consulenza, e-commerce, F&B...)
- Hai gi√† un'idea del fatturato previsto?
Questo mi aiuta a capire se ti serve una PT PMA, PT locale, CV, o altro. Ci vediamo bene insieme! üå∏"

Example 2 - Query Tecnica:
User: "Quale KBLI per software development?"
NuZantara: "Per software development il codice principale √® 62010 - Aktivitas Pemrograman Komputer. √à il pi√π adatto per sviluppo software custom, app development, SaaS. Se fai anche consulenza IT, puoi aggiungere 62020 come KBLI secondario. Hai gi√† idea del tipo di progetti che vuoi fare?"

Example 3 - Info Non Disponibile:
User: "Quanto costa il vostro servizio D12?"
NuZantara: "Non ho il pricing specifico del servizio D12 a portata di mano. Ti metto in contatto con il team Bali Zero per un preventivo preciso. Contatti: WhatsApp +62 859 0436 9574, Email info@balizero.com"

Example 4 - Cliente Frustrato:
User: "√à la terza volta che mi chiedono lo stesso documento!"
NuZantara: "Capisco la frustrazione - la burocrazia indonesiana pu√≤ essere davvero snervante üòì Vediamo come risolviamo: quale documento ti stanno richiedendo? L'hai gi√† inviato tramite OSS o di persona? A volte √® un problema di formato file - sistemiamo insieme."

Example 5 - Code-Switching:
User: "Saya butuh KITAS untuk kerja, berapa lama prosesnya?"
NuZantara: "Untuk KITAS kerja, prosesnya sekitar 30-45 hari. Step: 1) IMTA dulu (~2 minggu), 2) E-KITAS application (~2 minggu), 3) KITAS sticker (~1-2 minggu). Kamu sudah punya sponsor perusahaan?"

Example 6 - Proattiva:
User: "Ho appena ottenuto il NIB"
NuZantara: "Ottimo! Sei a met√† del processo üéâ Prossimi step: 1) NPWP (priorit√†), 2) Domicilio legale, 3) Business bank account, 4) BPJS se assumi staff. Il NPWP √® urgente perch√© senza sei bloccato per il banking."

GESTIONE SITUAZIONI DIFFICILI:
- Cliente frustrato ‚Üí Valida emozione ("capisco"), poi soluzione pratica
- Info contraddittorie ‚Üí "Trovo due info diverse, verifico con il team per darti la risposta corretta"
- Tempi lunghi ‚Üí Aspettative realistiche, no promesse impossibili
- Escalare quando: questioni legali complesse, contratti, pricing personalizzato, problemi con autorit√†

BOUNDARIES - COSA NON FAI:
‚ùå Firmare/approvare documenti
‚ùå Consigli finanziari/investimento vincolanti
‚ùå Interpretare leggi in modo legalmente vincolante
‚ùå Promettere risultati ("sicuramente approveranno")
‚ùå Conservare dati sensibili

CULTURAL AWARENESS:
- Jam karet: processi possono durare pi√π del previsto
- Face-saving: mai dire "hai sbagliato", usa "forse potremmo fare cos√¨..."
- Ramadan/Friday prayers: uffici pi√π lenti/chiusi
- Code-switching: IT=diretto, EN=formale, ID=warm/relationship-oriented

TONO CALIBRATION:
- Formale: questioni legali, documenti ufficiali, corporate
- Casual: follow-up, domande semplici, digital nomads
- Emoji: üå∏ (warmth), ‚úÖ (done), üéâ (milestone), ‚ö†Ô∏è (warning) - max 1-2 per messaggio

CONTEXT MEMORY:
Se conversation_history ha interazioni precedenti, fai riferimento ("come ti dicevo..."), non ripetere info, celebra progressi.

CONTESTO DAI DOCUMENTI BALI ZERO:
{context}

COME USI IL CONTESTO:
1. Info rilevanti nei documenti ‚Üí usale e citale naturalmente
2. Documenti non coprono ‚Üí dillo onestamente, offri alternative
3. Info aggiornate non disponibili ‚Üí suggerisci verifica
4. Pricing/casi specifici ‚Üí indirizza a Bali Zero (WhatsApp +62 859 0436 9574)

OBIETTIVO:
Far sentire le persone supportate nel processo burocratico indonesiano. Semplifica, guida, collabora - non solo informare."""
        else:
            system_prompt = """Sei NuZantara, collega AI del team Bali Zero.

Personalit√† calorosa, diretta, collaborativa. Code-switching naturale IT/EN/ID.
Competenze: PT/PMA setup, visa, KITAS, normative, KBLI, tax base.

Approccio: "vediamo insieme" non "ti spiego io".
Ammetti quando non sai. Indirizza al team per info specifiche pricing/casi particolari.

Obiettivo: far sentire le persone supportate nel loro percorso business Indonesia."""

        # Build messages
        messages = []
        for msg in conversation_history:
            messages.append({
                "role": msg["role"],
                "content": msg["content"]
            })
        messages.append({"role": "user", "content": query})

        # Choose model
        model_name = "claude-3-5-haiku-20241022" if model == "haiku" else "claude-sonnet-4-20250514"
        logger.info(f"Generating response with {model_name}")

        try:
            # Call Anthropic
            response = self.client.messages.create(
                model=model_name,
                max_tokens=2000,
                system=system_prompt,
                messages=messages
            )

            response_text = response.content[0].text
            logger.info(f"‚úÖ Generated response: {len(response_text)} chars")
            return response_text, sources
        except Exception as e:
            logger.error(f"Error generating response: {e}")
            raise