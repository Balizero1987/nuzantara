# Dockerfile for ZANTARA RAG Backend (Railway deployment)
# Build context: repo root
FROM --platform=linux/amd64 python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY "apps/backend-rag 2/backend/requirements.txt" ./requirements.txt

# Install PyTorch CPU-only first (avoid 700MB+ CUDA downloads that timeout on Railway)
RUN pip install --no-cache-dir "torch>=2.0.0" --index-url https://download.pytorch.org/whl/cpu

# Install remaining dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Pre-download embedding model to avoid startup delays and rate limits
RUN python -c "from sentence_transformers import SentenceTransformer; print('Downloading embedding model...'); SentenceTransformer('all-MiniLM-L6-v2'); print('Model cached successfully')"

# Copy application code
COPY "apps/backend-rag 2/backend" ./

# Environment
ENV PYTHONUNBUFFERED=1
ENV PORT=8080

# Expose port
EXPOSE 8080

# Railway handles health checks via the /health endpoint, no Docker HEALTHCHECK needed

# Run with main_cloud.py (uses ChromaDB from Cloudflare R2, PostgreSQL from Railway)
# Note: we need to add parent dir to PYTHONPATH for imports to work
CMD ["sh", "-c", "PYTHONPATH=/app:$PYTHONPATH uvicorn app.main_cloud:app --host 0.0.0.0 --port 8080"]
