/**
 * RAG Warmup Service
 * Pre-warm RAG system per performance ottimali
 * ~20 righe di codice
 */

class RAGWarmupService {
    constructor() {
        this.warmupQueries = [
            "ciao",
            "come stai", 
            "aiutami",
            "grazie",
            "salve"
        ];
        this.isWarmedUp = false;
        this.warmupPromise = null;
        
        console.log('üî• RAG Warmup Service initialized');
    }
    
    /**
     * Esegue warmup del sistema RAG
     */
    async warmup() {
        if (this.isWarmedUp) {
            console.log('üî• RAG already warmed up');
            return;
        }
        
        if (this.warmupPromise) {
            console.log('üî• RAG warmup in progress...');
            return this.warmupPromise;
        }
        
        this.warmupPromise = this._performWarmup();
        return this.warmupPromise;
    }
    
    async _performWarmup() {
        console.log('üî• Starting RAG warmup...');
        
        try {
            // Warmup queries in parallelo
            const warmupPromises = this.warmupQueries.map(async (query) => {
                try {
                    await ZANTARA_API.chat(query);
                    console.log(`üî• Warmup query: "${query}" ‚úÖ`);
                } catch (error) {
                    console.log(`üî• Warmup query: "${query}" ‚ùå (expected)`);
                }
            });
            
            await Promise.allSettled(warmupPromises);
            
            this.isWarmedUp = true;
            console.log('üî• RAG warmup completed! System ready for optimal performance');
            
        } catch (error) {
            console.log('üî• RAG warmup failed, but system still functional');
        }
    }
    
    /**
     * Controlla se sistema √® warm
     */
    isReady() {
        return this.isWarmedUp;
    }
}

// Export per compatibilit√†
if (typeof module !== 'undefined' && module.exports) {
    module.exports = RAGWarmupService;
} else {
    window.RAGWarmupService = RAGWarmupService;
}
